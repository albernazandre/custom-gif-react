{"ast":null,"code":"/* import React, { useState, useEffect } from \"react\";\n// axios facilita a requisicao fetch\nimport axios from \"axios\";\n\n// API_KEY = capturando a chave que vai ser passada no fetch\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst Tag = () => {\n    // vamos selecionar uma tag do gif que queremos (ex: cat gifs)\n    const [tag, setTag] = useState('dogs');\n    // o gif sera a url do gif\n    const [gif, setGif] = useState('');\n\n    const fetchGif = async (tag) => {\n        const url = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=${tag}`;\n      \n        const { data } = await axios.get(url); // promise...\n        // capturando a url do gif\n        const imageSrc = data.data.images.downsized_large.url;\n\n        setGif(imageSrc);\n    }\n\n    // Se o array é deixado vazio, entao a funcao useEffect funciona como\n    // um component did mount, o que quer dizer que so acontece\n    // inicialmente na primeira renderizacao\n    useEffect(() => {\n      fetchGif();    \n    }, []);\n\n    const handleClick = () => {\n        fetchGif(tag);\n    }\n\n    return (\n        <div className=\"container\">\n          <h1>Random {tag} Gif</h1>\n          <img width=\"500\" src={gif} alt='Random Gif' />\n          <input \n            value={tag} \n            onChange={(event) => setTag(event.target.value)} />\n          <button onClick={handleClick}>CLICK FOR NEW GIF</button>\n        </div>\n    );\n}\n\nexport default Tag; */","map":{"version":3,"names":[],"sources":["/home/andre/Documentos/projetos autonomos/Projetos-em-React/project-gif-custom-hooks/src/components/Tag_V1.jsx"],"sourcesContent":["/* import React, { useState, useEffect } from \"react\";\n// axios facilita a requisicao fetch\nimport axios from \"axios\";\n\n// API_KEY = capturando a chave que vai ser passada no fetch\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst Tag = () => {\n    // vamos selecionar uma tag do gif que queremos (ex: cat gifs)\n    const [tag, setTag] = useState('dogs');\n    // o gif sera a url do gif\n    const [gif, setGif] = useState('');\n\n    const fetchGif = async (tag) => {\n        const url = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=${tag}`;\n      \n        const { data } = await axios.get(url); // promise...\n        // capturando a url do gif\n        const imageSrc = data.data.images.downsized_large.url;\n\n        setGif(imageSrc);\n    }\n\n    // Se o array é deixado vazio, entao a funcao useEffect funciona como\n    // um component did mount, o que quer dizer que so acontece\n    // inicialmente na primeira renderizacao\n    useEffect(() => {\n      fetchGif();    \n    }, []);\n\n    const handleClick = () => {\n        fetchGif(tag);\n    }\n\n    return (\n        <div className=\"container\">\n          <h1>Random {tag} Gif</h1>\n          <img width=\"500\" src={gif} alt='Random Gif' />\n          <input \n            value={tag} \n            onChange={(event) => setTag(event.target.value)} />\n          <button onClick={handleClick}>CLICK FOR NEW GIF</button>\n        </div>\n    );\n}\n\nexport default Tag; */\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}